

@node COMPOSITING
@chapter COMPOSITING


A large amount of Cinelerra's binary size is directed towards
compositing.  When you remove the letterboxing from a widescreen show,
you're compositing.  Changing the resolution of a show, making a split
screen, and fading in and out among other things are all compositing
operations in Cinelerra.  Cinelerra detects when it's in a compositing
operation and plays back through the compositing engine only then. 
Otherwise, it uses the fastest decoder available in the hardware.

Compositing operations are done on the timeline and in the Compositor
window.  Shortcuts exist in the Resource window for changing some
compositing attributes.  Once some video files are on the timeline, the
compositor window is a good place to try compositing.



@menu
* THE CAMERA AND PROJECTOR::
* MASKS::
* CROPPING::
@ignore
* SAFE REGIONS::
@end ignore
* OVERLAY MODES::
* TRACK AND OUTPUT SIZES::
@end menu



@node THE CAMERA AND PROJECTOR
@section THE CAMERA AND PROJECTOR

In the compositor window, the most important functions are the
@image{camera} camera button and the @image{projector} projector
button.  These control operation of the camera and projector.  Inside
Cinelerra's compositing pipeline, the camera determines where in the
source video the temporary is copied from.  The projector determines
where in the output the temporary is copied to.  The temporary is a
frame of video in Cinelerra's memory where all graphics processing is
done.  Each track has a different temporary which is defined by the
track size.  By resizing the tracks you can create splitscreens, pans,
and zooms.

@sp 2
@center @image{compositing_pipeline}
@center @b{Visual representation of the compositing pipeline}.

When editing the camera and projector in the compositing window, the
first track with @b{record} enabled is the track affected.  Even if
the track is completely transparent, it's still the affected track.  If
multiple video tracks exist, the easiest way to select one track for
editing is to @b{shift-click} on the record icon of the track.  This
solos the track.

When the @b{projector} button is enabled in the compositor window,
you're in projector editing mode.  A guide box appears in the video
window.  Dragging anywhere in the video window causes the guide box to
move, hopefully along with the video.  @b{shift-dragging} anywhere
in the video window causes the guide box to shrink and grow along with
the video.  Once you've positioned the video with the projector, you're
ready to master the camera.

Select the @image{camera} camera button to enable camera editing mode. 
In this mode, the guide box shows where the camera position is in
relation to past and future camera positions but not where it is in
relation to the source video.  Dragging the camera box in the
compositor window doesn't move the box but instead moves the location
of the video inside the box.

For example, when you drag the camera left, the video moves right. 
When you drag the camera up, the video moves down.  When you shift-drag
the camera, the effect is the same as if you zoomed in or out of the
source.  The intention of the camera is to produce still photo panning,
while the intention of the projector is to composite several sources in
the same scene.

In the compositing window, there is a popup menu of options for the
camera and projector.  Right click over the video portion of the
compositing window to bring up the menu.

@itemize

@item Reset Camera causes the camera to return to the center position.

@item Reset Projector causes the projector to return to the center.

@end itemize


The camera and projector have shortcut operations neither in the popup
menu or represented in video overlays.  These are accessed in the
@b{Tool window}.  Most operations in the Compositor window have a
tool window which is enabled by activating the @image{toolwindow}
question mark.

In the case of the camera and projector, the tool window shows x, y,
and z coordinates.  By either tumbling or entering text directly, the
camera and projector can be precisely positioned.  9 justification
types are also defined for easy access.  A popular justification
operation is upper left projection after image reduction.  This is used
when reducing the size of video with aspect ratio adjustment.

@b{THE TRANSLATION EFFECT}

The translation effect allows simultaneous aspect ratio conversion and
reduction but is easier to use if the reduced video is put in the upper
left of the temporary instead of in the center.  The track size is set
to the original size of the video and the camera is centered.  The
output size is set to the reduced size of the video.  Without any
effects, this produces just the cropped center portion of the video in
the output.

The translation effect is dropped onto the video track.  The input
dimensions of the translation effect are set to the original size and
the output dimensions are set to the reduced size.  To put the reduced
video in the center section that the projector shows would require
offsetting @b{out x and out y} by a complicated calculation. 
Instead, we leave @b{out x and out y} at 0 and use the projector's
tool window.

Merely by selecting @image{left_justify} left justify and
@image{top_justify} top justify, the projector displays the reduced
image from the top left corner of the temporary in the center of the
output.






@node MASKS
@section MASKS

Masks define a region of the video to either set opaque or transparent.

Another thing the mask tool does is draw paths.  Paths are lines while
masks are areas.  Paths can be simple line drawings or outlines.

Masks can be used in conjunction with another effect to isolate the
effect to a certain region of the frame.  A copy of one video track may
be delayed slightly and unmasked in locations where the one copy has
interference but the other copy doesn't.  Color correction may be needed
in one section of a frame but not another.  A mask can be applied to
just a section of the color corrected track while the vanilla track
shows through.  Removal of boom microphones, airplanes, and housewives
are other mask uses.


The order of the compositing pipeline affects what can be done with
masks.  Mainly, masks are performed on the temporary after effects and
before the projector.  This means multiple tracks can be bounced to a
masked track and projected with the same mask.

Our compositing pipeline graph now has a masking stage.  There are 8
possible masks per track.  Each mask is defined separately, although
they each perform the same operation, whether it's addition or
subtraction, or a path.

@sp 2
@center @image{compositing_pipeline2}
@center @b{Compositing pipeline with masks}

To define a mask, go into the Compositor window and enable the
@image{mask} @b{mask} toggle.  

Now go over the video and click to create a starting point for the
mask.  Click again in another part of the image to create a new point of
the polygon.  Every click creates a new point for a mask.  The polygon
is automatically closed.

Knowing which point is the 1st point is essential for animating masks,
so the 1st point is always drawn filled in while other points are drawn
as an outline.  The current point being edited is enlarged.

Once points are defined, they can be moved by @b{ctrl-dragging} in the
vicinity of the corner.  This; however, doesn't smooth out the curve. 
The lines are linear by default.  To get curves, @b{shift-drag} on a
point to create control points.  Then @b{shift-dragging} near a control
point causes the control point to move.

Finally, once you have a mask, the mask can be translated in one piece
by @b{alt-dragging} the mask.  Mask editing in Cinelerra is
identical to how The Gimp edits masks except in this case the effect of
the mask is always on.

@center @image{mask2}
@center Different types of mask points

@b{Mask tool window}

The masks have many more parameters which couldn't be represented with
video overlays.  These are represented in the tool window for masks. 

@ignore
Selecting the @image{toolwindow} question mark when the @image{mask}
mask toggle is highlighted brings up the mask options.
@end ignore

@b{MODE} determines if the mask removes data or makes data visible, if
it's a path or a closed polygon.  If the mode is subtractive, the mask
causes video to disappear.  If the mode is additive, the mask causes
video to appear and everything outside the mask to disappear.

@b{VALUE} determines how extreme the addition or subtraction is.  In the
subtractive mode, higher values subtract more alpha.  In the additive
mode, higher values make the region in the mask brighter while the
region outside the mask is always hidden.

@b{MASK NUMBER} The mask number determines which one of the 8 possible
masks we're editing.  Each track has 8 possible masks.  When you
click-drag in the compositor window, you're only editing one of the
masks.  Change the value of @b{mask number} to cause another mask to be
edited.  The previous mask is still active but only the curve overlay
for the currently selected mask is visible.

When multiple masks are used, their effects are ORed together.  Every
mask in a single track uses the same value, mode, feather, radius.

@b{FEATHER} The edges of a mask are hard by default but this rarely is desired. 
The @b{feather} parameter determines how many pixels to feather the
mask.  This creates softer edges but takes longer to render.

@b{RADIUS} Only applies to paths & determines the width of the path. 
Feather is still applied to the edges of the path.

Finally, there are parameters for editing one point on the current mask
instead of the whole mask.

@b{EDITING POINT} Selects the active point for editing.  The points are
all numbered from the 1st one created.  The active point is drawn
enlarged in the compositor window.

@b{X, Y} Shows the position of the selected point.  Enter text to
reposition it.

@b{DELETE POINT} Deletes the selected point

@b{MAKE LINEAR} This deletes the bezier control points to make the lines
linear.

Notes about animating masks are in the keyframe section.  @xref{MASK KEYFRAMES}


@node CROPPING
@section CROPPING



Cropping changes the value of the output dimensions and the projector
to reduce the visible picture area.  Enable the @image{crop} crop
toggle and the @image{toolwindow} tool window in the @b{compositing
window} to perform cropping.

This draws a rectangle over the video.  Click-drag anywhere in the
video to start a new rectangle.  Click-drag over any corner of the
rectangle to reposition the corner.

Alt-click in the cropping rectangle to translate the rectangle to any
position without resizing it.

The tool window allows text entry of the coordinates and executes the
cropping operation.  When the rectangle is positioned, hit the @b{do
it} button in the tool window to execute the cropping operation.





@ignore
@node SAFE REGIONS
@section SAFE REGIONS

On consumer displays the borders of the image are cut off and within
the cutoff point is a region which isn't always square like it is in
the compositor window.  The borders are intended for scratch room and
vertical blanking data.  You can show where these borders are by
enabling the @image{titlesafe} safe regions toggle.  Keep titles inside
the inner rectangle and keep action inside the outer rectangle.
@end ignore







@node OVERLAY MODES
@section OVERLAY MODES

Every video track has an overlay mode, accessible by expanding the
track.  The overlay mode is a pulldown menu on the left under the
fader.  When collapsed, it displays an icon representing the current
overlay mode.

Select the @image{expandpatch_checked} expand track toggle to view all
the options for a video track if you can't see the overlay mode.  The
overlay mode of video tracks is @b{normal} by default.  Select other
modes by clicking the overlay button and selecting an item from the
popup menu.

Overlay modes are processed inside the projector stage of compositing. 
The different modes are summarized below.

@itemize

@item

@b{Normal} uses a traditional Porter-Diff equation to blend tracks with
alpha.  When no alpha exists in the project color model, the new track
always replaces the output.

@item

@b{Addition}  In this mode, whatever is in the output is added to the
current track.  The result is blended based on the current track's
alpha onto the output.

@item

@b{Subtraction} In this mode, the current track is subtracted from the
output and the result is alpha blended onto the output.

@item 

@b{Multiply} is the most useful operation.  The current track is multiplied
by the output and the result blended onto the output.  Usually a black
and white image with no alpha channel or a white title on a black image
is used as the current track.  With the multiply operation, only the
output portions under the white area show.

@item

@b{Divide} divides the current track by the output and the result is
blended into the output.  It usually results in overloaded levels.

@item

@b{Replace} does no blending and overwrites the output with the current
track.

@end itemize





@node TRACK AND OUTPUT SIZES
@section TRACK AND OUTPUT SIZES

The size of the temporary and the size of the output in our compositing
pipeline are independant and variable.  This fits into everything
covered so far.  The camera's viewport is the temporary size.  Effects
are processed in the temporary and are affected by the temporary size. 
Projectors are rendered to the output and are affected by the output
size.  If the temporary is smaller than the output, the temporary is
bordered by blank regions in the output.  If the temporary is bigger
than the output, the temporary is cropped.

The temporary size is defined as the track size.  Each track has a
different size.  Right click on a track to bring up the track's menu. 
Select @b{Resize Track} to resize the track to any arbitrary size. 
Alternatively you can select @b{Match output size} to make the track
the same size as the output.

The output size is set in either @b{New} when creating a new project
or @b{Settings->Format}.  In the Resource window there is another
way to change the output size.  Right click on a video asset and select
@b{Match project size} to conform the output to the asset.  When new
tracks are created, the track size always conforms to the output size
specified by these methods.




