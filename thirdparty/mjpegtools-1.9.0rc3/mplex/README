
*  mplex-2 - MPEG1/2 SYSTEMS/PROGRAM stream multiplexer
*
* Orginally based on mplex
*  Copyright (C) 1994 1995 Christoph Moar 
* Reengineered version in C++
*  Copyright (C) 2000,2001, 2002 Andrew Stevens
*
*  Andrew.stevens@philips.com
		(Andrew Stevens)
*  This program is free software; you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation; either version 2 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
*  GNU General Public License in the file COPYING for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program; if not, write to the Free Software
*  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



MODIFICATIONS TO ORIGINAL

July 2000 Andrew Stevens
	 Trivial modifications to support catenated audio stremas and
	  non-intractive use.
August 2000 Andrew Stevens
	Modifed to support multiplexing of variable bit-rate
	video streams. Seems to work well.
August 2000 Andrew Stevens
	Removed use of temporary files for storing stream data.
	Increased performance through the use of a more efficient bitstream 
	library.
	Eliminated arithmetic overflow errors for large streams.
	Initial support for multiplexing variable bit-rate streams.

Novermber 2000 Andrew Stevens
	Clean up code to suit modern compilers with 64-bit int support.
	Cleaned up packet size calculations to make the code more flexible.
	Initial MPEG-2 support
	Support for splitting output streams (not yet completely implemented)
	Support for multiplexing for VCD.

Jan 2001-Dec 2002
	
	Reengineered in C++
	Support for SVCD.
	Support for basic DVD (dummy navigation sectors)
	Support for AC3 and LPCM audio
	VBR Audio as well as video.
	Clean stream splitting support.
	Class structure to simplify adding new stream types

	Encapsulation and modularistion
