#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=4

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
#DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

DEB_HOST_GNU_CPU    ?= $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)
DEB_HOST_GNU_SYSTEM ?= $(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM)
HOST_CPUS += $(DEB_HOST_GNU_CPU)
ifeq ($(DEB_HOST_GNU_CPU),i386)
	HOST_CPUS += i686
endif

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# shared library versions, option 1
#version=2.0.5
#major=2
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

LT_RELEASE = $(shell sed -n -e 's/^Package: libmjpegtools-\([.0-9]\+\)$$/\1/p' debian/control)

config-stamp: configure
	dh_testdir
	# Add here commands to configure the package.
#	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info
# --enable-zalpha
	for cpu in $(HOST_CPUS); do \
		mkdir debian/build-$$cpu; \
		cd debian/build-$$cpu; \
		../../configure --host=$$cpu-$(DEB_HOST_GNU_SYSTEM) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info \
				--srcdir=../.. --with-dv-yv12; \
		cd ../..; \
	done
	touch config-stamp

build: build-stamp
build-stamp: config-stamp
	dh_testdir

	# Add here commands to compile the package.
#	$(MAKE)
	for cpu in $(HOST_CPUS); do cd debian/build-$$cpu; $(MAKE); cd ../..; done

	touch build-stamp

clean:
	dh_testdir
	dh_testroot

	# Add here commands to clean up after the build process.
#	-$(MAKE) distclean
#	-for cpu in $(HOST_CPUS); do cd debian/build-$$cpu; $(MAKE) distclean; cd ../..; done
	for cpu in $(HOST_CPUS); do rm -rf debian/*-$$cpu*; done
	rm -f config-stamp build-stamp install-stamp debian/libmjpegtools-$(LT_RELEASE).files
#	-test -r /usr/share/misc/config.sub && \
#	  cp -f /usr/share/misc/config.sub config.sub
#	-test -r /usr/share/misc/config.guess && \
#	  cp -f /usr/share/misc/config.guess config.guess

	dh_clean

install: install-stamp
install-stamp: build-stamp
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/tmp
#	$(MAKE) install prefix=$(CURDIR)/debian/tmp/usr
	for cpu in $(HOST_CPUS); do cd debian/build-$$cpu; $(MAKE) install prefix=$(CURDIR)/debian/inst-$$cpu/usr; cd ../..; done

	touch install-stamp


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_clean -k
	rm -f install-stamp
#	dh_movefiles
	cp -f debian/libmjpegtools.files debian/libmjpegtools-$(LT_RELEASE).files
	for cpu in $(HOST_CPUS); do \
		case $$cpu in \
		$(DEB_HOST_GNU_CPU)) \
			dh_movefiles --sourcedir=debian/inst-$$cpu ;; \
		*) \
			cd debian; \
			rm -f *-$$cpu*.{docs,manpages,info}; \
			for f in *.{docs,manpages,info}; do ln -sfn $$f `echo $$f | sed -e s/mjpegtools/mjpegtools-$$cpu/`; done; \
			cd ..; \
			for f in debian/*.files; do mv $$f `echo $$f | sed -e s/mjpegtools/mjpegtools-$$cpu/`; done; \
			dh_movefiles --sourcedir=debian/inst-$$cpu; \
			for f in debian/*.files; do mv $$f `echo $$f | sed -e s/mjpegtools-$$cpu/mjpegtools/`; done ;; \
		esac; \
	done
#	dh_installdebconf
	dh_installdocs
#	dh_installexamples
#	dh_installmenu
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
	dh_installman
	dh_installinfo
#	dh_undocumented
	dh_installchangelogs ChangeLog
	dh_link
#	dh_strip
	dh_strip -X.a
	dh_compress
	dh_fixperms
	dh_makeshlibs -V
	dh_installdeb
#	dh_perl
#	dh_shlibdeps
	for cpu in $(HOST_CPUS); do \
		case $$cpu in \
		$(DEB_HOST_GNU_CPU)) \
			n=mjpegtools ;; \
		*) \
			n=mjpegtools-$$cpu ;; \
		esac; \
		l=lib$${n}-$(LT_RELEASE); \
		LD_LIBRARY_PATH=debian/$$l/usr/lib dpkg-shlibdeps -Ldebian/$$l/DEBIAN/shlibs -Tdebian/$$n.substvars debian/$$n/usr/bin/*; \
		LD_LIBRARY_PATH=debian/$$l/usr/lib dpkg-shlibdeps -Ldebian/$$l/DEBIAN/shlibs -Tdebian/$$l.substvars debian/$$l/usr/lib/*.so.*.*.*; \
	done
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
