# Makefile.in generated by automake 1.7.3 from Makefile.am.
# dft/simd/codelets/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# This Makefile.am specifies a set of codelets, efficient transforms
# of small sizes, that are used as building blocks (kernels) by FFTW
# to build up large transforms, as well as the options for generating
# and compiling them.

# You can customize FFTW for special needs, e.g. to handle certain
# sizes more efficiently, by adding new codelets to the lists of those
# included by default.  If you change the list of codelets, any new
# ones you added will be automatically generated when you run the
# bootstrap script (see "Generating your own code" in the FFTW
# manual).

# -*- makefile -*-
# This file contains special make rules to generate codelets.
# This file requires GNU make .

srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/fftw
pkglibdir = $(libdir)/fftw
pkgincludedir = $(includedir)/fftw
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = x86_64-unknown-linux-gnu
ACLOCAL = ${SHELL} /root/hvirtual/thirdparty/fftw-3.0.1/missing --run aclocal-1.7
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /root/hvirtual/thirdparty/fftw-3.0.1/missing --run tar
AS = gcc
ASFLAGS = 
AUTOCONF = ${SHELL} /root/hvirtual/thirdparty/fftw-3.0.1/missing --run autoconf
AUTOHEADER = ${SHELL} /root/hvirtual/thirdparty/fftw-3.0.1/missing --run autoheader
AUTOMAKE = ${SHELL} /root/hvirtual/thirdparty/fftw-3.0.1/missing --run automake-1.7
AWK = mawk
CC = gcc
CCAS = gcc
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS = -fPIC  $(SIMD_CFLAGS)
CODELET_OPTIM = 
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FLIBS = 
FMA_FALSE = 
FMA_TRUE = #
HAVE_K7_FALSE = 
HAVE_K7_TRUE = #
HAVE_SIMD_FALSE = 
HAVE_SIMD_TRUE = #
INSTALLED_OCAMLC = /usr/local/bin/-ocamlc
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LDOUBLE_FALSE = 
LDOUBLE_TRUE = #
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /root/hvirtual/thirdparty/fftw-3.0.1/missing --run makeinfo
OBJEXT = o
OCAMLC = 
OCAMLCFLAGS = 
OCAMLDEFS = 
OCAMLDEP = 
OCAMLLDFLAGS = 
OCAMLOPT = 
OCAMLOPTCFLAGS = 
PACKAGE = fftw
PACKAGE_BUGREPORT = fftw@fftw.org
PACKAGE_NAME = fftw
PACKAGE_STRING = fftw 3.0.1
PACKAGE_TARNAME = fftw
PACKAGE_VERSION = 3.0.1
PATH_SEPARATOR = :
POW_LIB = 
PRECISION = d
PREC_SUFFIX = 
PTHREAD_CC = 
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHARED_VERSION_INFO = 3:1:0
SHELL = /bin/bash
SIMD_CFLAGS = 
SINGLE_FALSE = 
SINGLE_TRUE = #
STRIP = strip
TARGET_OCAMLBIN = /usr/local//bin
TARGET_OCAMLLIB = /usr/local//lib/fftw
TARGET_OCAMLRUN = /usr/local//bin/ocamlrun
THREADLIBS = 
THREADS_FALSE = 
THREADS_TRUE = #
VERSION = 3.0.1
ac_ct_CC = gcc
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /root/hvirtual/thirdparty/fftw-3.0.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

###########################################################################
AM_CPPFLAGS = -I$(top_srcdir)/kernel -I$(top_srcdir)/dft	\
-I$(top_srcdir)/dft/simd -I$(top_srcdir)/simd

noinst_LTLIBRARIES = libdft_codelets_simd.la

###########################################################################
# n1fv_<n> is a hard-coded FFTW_FORWARD FFT of size <n>, using SIMD
N1F = n1fv_2.c n1fv_3.c n1fv_4.c n1fv_5.c n1fv_6.c n1fv_7.c n1fv_8.c	\
n1fv_9.c n1fv_10.c n1fv_11.c n1fv_12.c n1fv_13.c n1fv_14.c n1fv_15.c	\
n1fv_16.c


# as above, but FFTW_BACKWARD
N1B = n1bv_2.c n1bv_3.c n1bv_4.c n1bv_5.c n1bv_6.c n1bv_7.c n1bv_8.c	\
n1bv_9.c n1bv_10.c n1bv_11.c n1bv_12.c n1bv_13.c n1bv_14.c n1bv_15.c	\
n1bv_16.c


# as above, with restricted input vector stride
N2F = n2fv_2.c n2fv_3.c n2fv_4.c n2fv_5.c n2fv_6.c n2fv_7.c n2fv_8.c	\
n2fv_9.c n2fv_10.c n2fv_11.c n2fv_12.c n2fv_13.c n2fv_14.c n2fv_15.c	\
n2fv_16.c


N2B = n2bv_2.c n2bv_3.c n2bv_4.c n2bv_5.c n2bv_6.c n2bv_7.c n2bv_8.c	\
n2bv_9.c n2bv_10.c n2bv_11.c n2bv_12.c n2bv_13.c n2bv_14.c n2bv_15.c	\
n2bv_16.c


###########################################################################
# m* codelets are like n* codelets, but with the loop body in
# a separate function.  This nonsense is necessary, compilers
# being what they are.
M1F = m1fv_16.c m1fv_32.c m1fv_64.c

M1B = m1bv_16.c m1bv_32.c m1bv_64.c

M2F = m2fv_16.c m2fv_32.c m2fv_64.c

M2B = m2bv_16.c m2bv_32.c m2bv_64.c

###########################################################################
# t1fv_<r> is a "twiddle" FFT of size <r>, implementing a radix-r DIT step
# for an FFTW_FORWARD transform, using SIMD
T1F = t1fv_2.c t1fv_3.c t1fv_4.c t1fv_5.c t1fv_6.c t1fv_7.c t1fv_8.c	\
t1fv_9.c t1fv_10.c t1fv_12.c t1fv_15.c t1fv_16.c t1fv_32.c t1fv_64.c


# as above, but FFTW_BACKWARD
T1B = t1bv_2.c t1bv_3.c t1bv_4.c t1bv_5.c t1bv_6.c t1bv_7.c t1bv_8.c	\
t1bv_9.c t1bv_10.c t1bv_12.c t1bv_15.c t1bv_16.c t1bv_32.c t1bv_64.c


###########################################################################
# q1fv_<r> is <r> twiddle FFTW_FORWARD FFTs of size <r> (DIF step),
# where the output is transposed, using SIMD.  This is used for
# in-place transposes in sizes that are divisible by <r>^2.  These
# codelets have size ~ <r>^2, so you should probably not use <r>
# bigger than 8 or so.
Q1F = q1fv_2.c q1fv_4.c q1fv_8.c

# as above, but FFTW_BACKWARD
Q1B = q1bv_2.c q1bv_4.c q1bv_8.c

###########################################################################
SIMD_CODELETS = $(N1F) $(N1B) $(N2F) $(N2B) $(M1F) $(M1B) $(M2F)	\
$(M2B) $(T1F) $(T1B) $(Q1F) $(Q1B)


#ALL_CODELETS = $(SIMD_CODELETS)
ALL_CODELETS = 

EXTRA_DIST = $(SIMD_CODELETS)
BUILT_SOURCES = $(ALL_CODELETS) $(CODLIST)

libdft_codelets_simd_la_SOURCES = $(BUILT_SOURCES)

SOLVTAB_NAME = X(solvtab_dft_simd)

CODLIST = codlist.c
CODELET_NAME = codelet_

#INDENT = indent -kr -cs -i5 -l800 -fca -nfc1 -sc -sob -cli4 -TR -Tplanner -TV
#GENFFTDIR = ${top_builddir}/genfft
#K7GENFFTDIR = ${top_builddir}/genfft-k7
#GEN_NOTW = ${GENFFTDIR}/gen_notw
#GEN_NOTW_NOINLINE = ${GENFFTDIR}/gen_notw_noinline
#GEN_NOTW_C = ${GENFFTDIR}/gen_notw_c
#GEN_NOTW_NOINLINE_C = ${GENFFTDIR}/gen_notw_noinline_c
#K7GEN_NOTW = ${K7GENFFTDIR}/gen_notw
#GEN_TWIDDLE = ${GENFFTDIR}/gen_twiddle
#GEN_TWIDDLE_C = ${GENFFTDIR}/gen_twiddle_c
#K7GEN_TWIDDLE = ${K7GENFFTDIR}/gen_twiddle
#GEN_TWIDSQ = ${GENFFTDIR}/gen_twidsq
#GEN_TWIDSQ_C = ${GENFFTDIR}/gen_twidsq_c
#GEN_R2HC = ${GENFFTDIR}/gen_r2hc
#GEN_R2HC_NOINLINE = ${GENFFTDIR}/gen_r2hc_noinline
#GEN_HC2R = ${GENFFTDIR}/gen_hc2r
#GEN_HC2R_NOINLINE = ${GENFFTDIR}/gen_hc2r_noinline
#GEN_HC2HC = ${GENFFTDIR}/gen_hc2hc
#GEN_R2R = ${GENFFTDIR}/gen_r2r
#PRELUDE_DFT = ${top_srcdir}/support/codelet_prelude.dft
#PRELUDE_RDFT = ${top_srcdir}/support/codelet_prelude.rdft
#ASMPRELUDE = ${top_srcdir}/support/codelet_asmprelude
#ADD_DATE = sed -e s/@DATE@/"`date`"/

#COPYRIGHT = ${top_srcdir}/COPYRIGHT
#CODELET_DEPS = $(COPYRIGHT) $(PRELUDE) $(ASMPRELUDE)
#PRELUDE_COMMANDS_DFT = cat $(COPYRIGHT) $(PRELUDE_DFT)
#PRELUDE_COMMANDS_RDFT = cat $(COPYRIGHT) $(PRELUDE_RDFT)
#ASMPRELUDE_COMMANDS = cat $(COPYRIGHT) $(ASMPRELUDE)
#FLAGS_FMA = 

##FLAGS_FMA = -fma

#FLAGS_COMMON = -compact -variables 4 $(FLAGS_FMA) #-no-randomized-cse
#DFT_FLAGS_COMMON = $(FLAGS_COMMON) 
#RDFT_FLAGS_COMMON = $(FLAGS_COMMON)


# special rules for regenerating codelets.
#GFLAGS = -simd $(FLAGS_COMMON)
subdir = dft/simd/codelets
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libdft_codelets_simd_la_LDFLAGS =
libdft_codelets_simd_la_LIBADD =
am__libdft_codelets_simd_la_SOURCES_DIST = n1fv_2.c n1fv_3.c n1fv_4.c \
	n1fv_5.c n1fv_6.c n1fv_7.c n1fv_8.c n1fv_9.c n1fv_10.c \
	n1fv_11.c n1fv_12.c n1fv_13.c n1fv_14.c n1fv_15.c n1fv_16.c \
	n1bv_2.c n1bv_3.c n1bv_4.c n1bv_5.c n1bv_6.c n1bv_7.c n1bv_8.c \
	n1bv_9.c n1bv_10.c n1bv_11.c n1bv_12.c n1bv_13.c n1bv_14.c \
	n1bv_15.c n1bv_16.c n2fv_2.c n2fv_3.c n2fv_4.c n2fv_5.c \
	n2fv_6.c n2fv_7.c n2fv_8.c n2fv_9.c n2fv_10.c n2fv_11.c \
	n2fv_12.c n2fv_13.c n2fv_14.c n2fv_15.c n2fv_16.c n2bv_2.c \
	n2bv_3.c n2bv_4.c n2bv_5.c n2bv_6.c n2bv_7.c n2bv_8.c n2bv_9.c \
	n2bv_10.c n2bv_11.c n2bv_12.c n2bv_13.c n2bv_14.c n2bv_15.c \
	n2bv_16.c m1fv_16.c m1fv_32.c m1fv_64.c m1bv_16.c m1bv_32.c \
	m1bv_64.c m2fv_16.c m2fv_32.c m2fv_64.c m2bv_16.c m2bv_32.c \
	m2bv_64.c t1fv_2.c t1fv_3.c t1fv_4.c t1fv_5.c t1fv_6.c t1fv_7.c \
	t1fv_8.c t1fv_9.c t1fv_10.c t1fv_12.c t1fv_15.c t1fv_16.c \
	t1fv_32.c t1fv_64.c t1bv_2.c t1bv_3.c t1bv_4.c t1bv_5.c \
	t1bv_6.c t1bv_7.c t1bv_8.c t1bv_9.c t1bv_10.c t1bv_12.c \
	t1bv_15.c t1bv_16.c t1bv_32.c t1bv_64.c q1fv_2.c q1fv_4.c \
	q1fv_8.c q1bv_2.c q1bv_4.c q1bv_8.c codlist.c
am__objects_1 = n1fv_2.lo n1fv_3.lo n1fv_4.lo n1fv_5.lo n1fv_6.lo \
	n1fv_7.lo n1fv_8.lo n1fv_9.lo n1fv_10.lo n1fv_11.lo n1fv_12.lo \
	n1fv_13.lo n1fv_14.lo n1fv_15.lo n1fv_16.lo
am__objects_2 = n1bv_2.lo n1bv_3.lo n1bv_4.lo n1bv_5.lo n1bv_6.lo \
	n1bv_7.lo n1bv_8.lo n1bv_9.lo n1bv_10.lo n1bv_11.lo n1bv_12.lo \
	n1bv_13.lo n1bv_14.lo n1bv_15.lo n1bv_16.lo
am__objects_3 = n2fv_2.lo n2fv_3.lo n2fv_4.lo n2fv_5.lo n2fv_6.lo \
	n2fv_7.lo n2fv_8.lo n2fv_9.lo n2fv_10.lo n2fv_11.lo n2fv_12.lo \
	n2fv_13.lo n2fv_14.lo n2fv_15.lo n2fv_16.lo
am__objects_4 = n2bv_2.lo n2bv_3.lo n2bv_4.lo n2bv_5.lo n2bv_6.lo \
	n2bv_7.lo n2bv_8.lo n2bv_9.lo n2bv_10.lo n2bv_11.lo n2bv_12.lo \
	n2bv_13.lo n2bv_14.lo n2bv_15.lo n2bv_16.lo
am__objects_5 = m1fv_16.lo m1fv_32.lo m1fv_64.lo
am__objects_6 = m1bv_16.lo m1bv_32.lo m1bv_64.lo
am__objects_7 = m2fv_16.lo m2fv_32.lo m2fv_64.lo
am__objects_8 = m2bv_16.lo m2bv_32.lo m2bv_64.lo
am__objects_9 = t1fv_2.lo t1fv_3.lo t1fv_4.lo t1fv_5.lo t1fv_6.lo \
	t1fv_7.lo t1fv_8.lo t1fv_9.lo t1fv_10.lo t1fv_12.lo t1fv_15.lo \
	t1fv_16.lo t1fv_32.lo t1fv_64.lo
am__objects_10 = t1bv_2.lo t1bv_3.lo t1bv_4.lo t1bv_5.lo t1bv_6.lo \
	t1bv_7.lo t1bv_8.lo t1bv_9.lo t1bv_10.lo t1bv_12.lo t1bv_15.lo \
	t1bv_16.lo t1bv_32.lo t1bv_64.lo
am__objects_11 = q1fv_2.lo q1fv_4.lo q1fv_8.lo
am__objects_12 = q1bv_2.lo q1bv_4.lo q1bv_8.lo
am__objects_13 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10) $(am__objects_11) $(am__objects_12)
#am__objects_14 = $(am__objects_13)
am__objects_14 =
am__objects_15 = codlist.lo
am__objects_16 = $(am__objects_14) $(am__objects_15)
am_libdft_codelets_simd_la_OBJECTS = $(am__objects_16)
libdft_codelets_simd_la_OBJECTS = $(am_libdft_codelets_simd_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/codlist.Plo ./$(DEPDIR)/m1bv_16.Plo \
	./$(DEPDIR)/m1bv_32.Plo ./$(DEPDIR)/m1bv_64.Plo \
	./$(DEPDIR)/m1fv_16.Plo ./$(DEPDIR)/m1fv_32.Plo \
	./$(DEPDIR)/m1fv_64.Plo ./$(DEPDIR)/m2bv_16.Plo \
	./$(DEPDIR)/m2bv_32.Plo ./$(DEPDIR)/m2bv_64.Plo \
	./$(DEPDIR)/m2fv_16.Plo ./$(DEPDIR)/m2fv_32.Plo \
	./$(DEPDIR)/m2fv_64.Plo ./$(DEPDIR)/n1bv_10.Plo \
	./$(DEPDIR)/n1bv_11.Plo ./$(DEPDIR)/n1bv_12.Plo \
	./$(DEPDIR)/n1bv_13.Plo ./$(DEPDIR)/n1bv_14.Plo \
	./$(DEPDIR)/n1bv_15.Plo ./$(DEPDIR)/n1bv_16.Plo \
	./$(DEPDIR)/n1bv_2.Plo ./$(DEPDIR)/n1bv_3.Plo \
	./$(DEPDIR)/n1bv_4.Plo ./$(DEPDIR)/n1bv_5.Plo \
	./$(DEPDIR)/n1bv_6.Plo ./$(DEPDIR)/n1bv_7.Plo \
	./$(DEPDIR)/n1bv_8.Plo ./$(DEPDIR)/n1bv_9.Plo \
	./$(DEPDIR)/n1fv_10.Plo ./$(DEPDIR)/n1fv_11.Plo \
	./$(DEPDIR)/n1fv_12.Plo ./$(DEPDIR)/n1fv_13.Plo \
	./$(DEPDIR)/n1fv_14.Plo ./$(DEPDIR)/n1fv_15.Plo \
	./$(DEPDIR)/n1fv_16.Plo ./$(DEPDIR)/n1fv_2.Plo \
	./$(DEPDIR)/n1fv_3.Plo ./$(DEPDIR)/n1fv_4.Plo \
	./$(DEPDIR)/n1fv_5.Plo ./$(DEPDIR)/n1fv_6.Plo \
	./$(DEPDIR)/n1fv_7.Plo ./$(DEPDIR)/n1fv_8.Plo \
	./$(DEPDIR)/n1fv_9.Plo ./$(DEPDIR)/n2bv_10.Plo \
	./$(DEPDIR)/n2bv_11.Plo ./$(DEPDIR)/n2bv_12.Plo \
	./$(DEPDIR)/n2bv_13.Plo ./$(DEPDIR)/n2bv_14.Plo \
	./$(DEPDIR)/n2bv_15.Plo ./$(DEPDIR)/n2bv_16.Plo \
	./$(DEPDIR)/n2bv_2.Plo ./$(DEPDIR)/n2bv_3.Plo \
	./$(DEPDIR)/n2bv_4.Plo ./$(DEPDIR)/n2bv_5.Plo \
	./$(DEPDIR)/n2bv_6.Plo ./$(DEPDIR)/n2bv_7.Plo \
	./$(DEPDIR)/n2bv_8.Plo ./$(DEPDIR)/n2bv_9.Plo \
	./$(DEPDIR)/n2fv_10.Plo ./$(DEPDIR)/n2fv_11.Plo \
	./$(DEPDIR)/n2fv_12.Plo ./$(DEPDIR)/n2fv_13.Plo \
	./$(DEPDIR)/n2fv_14.Plo ./$(DEPDIR)/n2fv_15.Plo \
	./$(DEPDIR)/n2fv_16.Plo ./$(DEPDIR)/n2fv_2.Plo \
	./$(DEPDIR)/n2fv_3.Plo ./$(DEPDIR)/n2fv_4.Plo \
	./$(DEPDIR)/n2fv_5.Plo ./$(DEPDIR)/n2fv_6.Plo \
	./$(DEPDIR)/n2fv_7.Plo ./$(DEPDIR)/n2fv_8.Plo \
	./$(DEPDIR)/n2fv_9.Plo ./$(DEPDIR)/q1bv_2.Plo \
	./$(DEPDIR)/q1bv_4.Plo ./$(DEPDIR)/q1bv_8.Plo \
	./$(DEPDIR)/q1fv_2.Plo ./$(DEPDIR)/q1fv_4.Plo \
	./$(DEPDIR)/q1fv_8.Plo ./$(DEPDIR)/t1bv_10.Plo \
	./$(DEPDIR)/t1bv_12.Plo ./$(DEPDIR)/t1bv_15.Plo \
	./$(DEPDIR)/t1bv_16.Plo ./$(DEPDIR)/t1bv_2.Plo \
	./$(DEPDIR)/t1bv_3.Plo ./$(DEPDIR)/t1bv_32.Plo \
	./$(DEPDIR)/t1bv_4.Plo ./$(DEPDIR)/t1bv_5.Plo \
	./$(DEPDIR)/t1bv_6.Plo ./$(DEPDIR)/t1bv_64.Plo \
	./$(DEPDIR)/t1bv_7.Plo ./$(DEPDIR)/t1bv_8.Plo \
	./$(DEPDIR)/t1bv_9.Plo ./$(DEPDIR)/t1fv_10.Plo \
	./$(DEPDIR)/t1fv_12.Plo ./$(DEPDIR)/t1fv_15.Plo \
	./$(DEPDIR)/t1fv_16.Plo ./$(DEPDIR)/t1fv_2.Plo \
	./$(DEPDIR)/t1fv_3.Plo ./$(DEPDIR)/t1fv_32.Plo \
	./$(DEPDIR)/t1fv_4.Plo ./$(DEPDIR)/t1fv_5.Plo \
	./$(DEPDIR)/t1fv_6.Plo ./$(DEPDIR)/t1fv_64.Plo \
	./$(DEPDIR)/t1fv_7.Plo ./$(DEPDIR)/t1fv_8.Plo \
	./$(DEPDIR)/t1fv_9.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(am__libdft_codelets_simd_la_SOURCES_DIST)
DIST_COMMON = $(top_srcdir)/support/Makefile.codelets Makefile.am \
	Makefile.in
SOURCES = $(libdft_codelets_simd_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am $(top_srcdir)/support/Makefile.codelets $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  dft/simd/codelets/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libdft_codelets_simd.la: $(libdft_codelets_simd_la_OBJECTS) $(libdft_codelets_simd_la_DEPENDENCIES) 
	$(LINK)  $(libdft_codelets_simd_la_LDFLAGS) $(libdft_codelets_simd_la_OBJECTS) $(libdft_codelets_simd_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/codlist.Plo
include ./$(DEPDIR)/m1bv_16.Plo
include ./$(DEPDIR)/m1bv_32.Plo
include ./$(DEPDIR)/m1bv_64.Plo
include ./$(DEPDIR)/m1fv_16.Plo
include ./$(DEPDIR)/m1fv_32.Plo
include ./$(DEPDIR)/m1fv_64.Plo
include ./$(DEPDIR)/m2bv_16.Plo
include ./$(DEPDIR)/m2bv_32.Plo
include ./$(DEPDIR)/m2bv_64.Plo
include ./$(DEPDIR)/m2fv_16.Plo
include ./$(DEPDIR)/m2fv_32.Plo
include ./$(DEPDIR)/m2fv_64.Plo
include ./$(DEPDIR)/n1bv_10.Plo
include ./$(DEPDIR)/n1bv_11.Plo
include ./$(DEPDIR)/n1bv_12.Plo
include ./$(DEPDIR)/n1bv_13.Plo
include ./$(DEPDIR)/n1bv_14.Plo
include ./$(DEPDIR)/n1bv_15.Plo
include ./$(DEPDIR)/n1bv_16.Plo
include ./$(DEPDIR)/n1bv_2.Plo
include ./$(DEPDIR)/n1bv_3.Plo
include ./$(DEPDIR)/n1bv_4.Plo
include ./$(DEPDIR)/n1bv_5.Plo
include ./$(DEPDIR)/n1bv_6.Plo
include ./$(DEPDIR)/n1bv_7.Plo
include ./$(DEPDIR)/n1bv_8.Plo
include ./$(DEPDIR)/n1bv_9.Plo
include ./$(DEPDIR)/n1fv_10.Plo
include ./$(DEPDIR)/n1fv_11.Plo
include ./$(DEPDIR)/n1fv_12.Plo
include ./$(DEPDIR)/n1fv_13.Plo
include ./$(DEPDIR)/n1fv_14.Plo
include ./$(DEPDIR)/n1fv_15.Plo
include ./$(DEPDIR)/n1fv_16.Plo
include ./$(DEPDIR)/n1fv_2.Plo
include ./$(DEPDIR)/n1fv_3.Plo
include ./$(DEPDIR)/n1fv_4.Plo
include ./$(DEPDIR)/n1fv_5.Plo
include ./$(DEPDIR)/n1fv_6.Plo
include ./$(DEPDIR)/n1fv_7.Plo
include ./$(DEPDIR)/n1fv_8.Plo
include ./$(DEPDIR)/n1fv_9.Plo
include ./$(DEPDIR)/n2bv_10.Plo
include ./$(DEPDIR)/n2bv_11.Plo
include ./$(DEPDIR)/n2bv_12.Plo
include ./$(DEPDIR)/n2bv_13.Plo
include ./$(DEPDIR)/n2bv_14.Plo
include ./$(DEPDIR)/n2bv_15.Plo
include ./$(DEPDIR)/n2bv_16.Plo
include ./$(DEPDIR)/n2bv_2.Plo
include ./$(DEPDIR)/n2bv_3.Plo
include ./$(DEPDIR)/n2bv_4.Plo
include ./$(DEPDIR)/n2bv_5.Plo
include ./$(DEPDIR)/n2bv_6.Plo
include ./$(DEPDIR)/n2bv_7.Plo
include ./$(DEPDIR)/n2bv_8.Plo
include ./$(DEPDIR)/n2bv_9.Plo
include ./$(DEPDIR)/n2fv_10.Plo
include ./$(DEPDIR)/n2fv_11.Plo
include ./$(DEPDIR)/n2fv_12.Plo
include ./$(DEPDIR)/n2fv_13.Plo
include ./$(DEPDIR)/n2fv_14.Plo
include ./$(DEPDIR)/n2fv_15.Plo
include ./$(DEPDIR)/n2fv_16.Plo
include ./$(DEPDIR)/n2fv_2.Plo
include ./$(DEPDIR)/n2fv_3.Plo
include ./$(DEPDIR)/n2fv_4.Plo
include ./$(DEPDIR)/n2fv_5.Plo
include ./$(DEPDIR)/n2fv_6.Plo
include ./$(DEPDIR)/n2fv_7.Plo
include ./$(DEPDIR)/n2fv_8.Plo
include ./$(DEPDIR)/n2fv_9.Plo
include ./$(DEPDIR)/q1bv_2.Plo
include ./$(DEPDIR)/q1bv_4.Plo
include ./$(DEPDIR)/q1bv_8.Plo
include ./$(DEPDIR)/q1fv_2.Plo
include ./$(DEPDIR)/q1fv_4.Plo
include ./$(DEPDIR)/q1fv_8.Plo
include ./$(DEPDIR)/t1bv_10.Plo
include ./$(DEPDIR)/t1bv_12.Plo
include ./$(DEPDIR)/t1bv_15.Plo
include ./$(DEPDIR)/t1bv_16.Plo
include ./$(DEPDIR)/t1bv_2.Plo
include ./$(DEPDIR)/t1bv_3.Plo
include ./$(DEPDIR)/t1bv_32.Plo
include ./$(DEPDIR)/t1bv_4.Plo
include ./$(DEPDIR)/t1bv_5.Plo
include ./$(DEPDIR)/t1bv_6.Plo
include ./$(DEPDIR)/t1bv_64.Plo
include ./$(DEPDIR)/t1bv_7.Plo
include ./$(DEPDIR)/t1bv_8.Plo
include ./$(DEPDIR)/t1bv_9.Plo
include ./$(DEPDIR)/t1fv_10.Plo
include ./$(DEPDIR)/t1fv_12.Plo
include ./$(DEPDIR)/t1fv_15.Plo
include ./$(DEPDIR)/t1fv_16.Plo
include ./$(DEPDIR)/t1fv_2.Plo
include ./$(DEPDIR)/t1fv_3.Plo
include ./$(DEPDIR)/t1fv_32.Plo
include ./$(DEPDIR)/t1fv_4.Plo
include ./$(DEPDIR)/t1fv_5.Plo
include ./$(DEPDIR)/t1fv_6.Plo
include ./$(DEPDIR)/t1fv_64.Plo
include ./$(DEPDIR)/t1fv_7.Plo
include ./$(DEPDIR)/t1fv_8.Plo
include ./$(DEPDIR)/t1fv_9.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/../../../support
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-local clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am


# rule to build codlist
$(CODLIST): Makefile
	(								\
	echo "#include \"ifftw.h\"";					\
	echo;								\
	for i in $(ALL_CODELETS) NIL; do				\
	   if test "$$i" != NIL; then					\
	     j=`basename $$i | sed -e 's/[.][cS]$$//g'`;		\
             echo "extern void X($(CODELET_NAME)$$j)(planner *);";	\
           fi								\
	done;								\
	echo;								\
	echo;								\
	echo "extern const solvtab $(SOLVTAB_NAME);";		        \
	echo "const solvtab $(SOLVTAB_NAME) = {";		        \
	for i in $(ALL_CODELETS) NIL; do				\
	   if test "$$i" != NIL; then					\
	     j=`basename $$i | sed -e 's/[.][cS]$$//g'`;		\
	     echo "   SOLVTAB(X($(CODELET_NAME)$$j)),";			\
	   fi								\
	done;								\
	echo "   SOLVTAB_END";						\
	echo "};";							\
	) >$@

clean-local:
	rm -f codlist.c

# cancel the hideous builtin rules that cause an infinite loop
#%: %.o
#%: %.s
#%: %.c
#%: %.S

#n1fv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_C) $(GFLAGS) -n $* -name n1fv_$* -include "n1f.h") | $(ADD_DATE) | $(INDENT) >$@

#n2fv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_C) $(GFLAGS) -n $* -name n2fv_$* -with-ostride 2 -include "n2f.h") | $(ADD_DATE) | $(INDENT) >$@

#n1bv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_C) $(GFLAGS) -sign 1 -n $* -name n1bv_$* -include "n1b.h") | $(ADD_DATE) | $(INDENT) >$@

#n2bv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_C) $(GFLAGS) -sign 1 -n $* -name n2bv_$* -with-ostride 2 -include "n2b.h") | $(ADD_DATE) | $(INDENT) >$@

#m1fv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_NOINLINE_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_NOINLINE_C) $(GFLAGS) -n $* -name m1fv_$* -include "n1f.h") | $(ADD_DATE) | $(INDENT) >$@

#m2fv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_NOINLINE_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_NOINLINE_C) $(GFLAGS) -n $* -name m2fv_$* -with-ostride 2 -include "n2f.h") | $(ADD_DATE) | $(INDENT) >$@

#m1bv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_NOINLINE_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_NOINLINE_C) $(GFLAGS) -sign 1 -n $* -name m1bv_$* -include "n1b.h") | $(ADD_DATE) | $(INDENT) >$@

#m2bv_%.c:  $(CODELET_DEPS) $(GEN_NOTW_NOINLINE_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_NOTW_NOINLINE_C) $(GFLAGS) -sign 1 -n $* -name m2bv_$* -with-ostride 2 -include "n2b.h") | $(ADD_DATE) | $(INDENT) >$@

#t1fv_%.c:  $(CODELET_DEPS) $(GEN_TWIDDLE_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_TWIDDLE_C) $(GFLAGS) -n $* -name t1fv_$* -include "t1f.h") | $(ADD_DATE) | $(INDENT) >$@

#t1bv_%.c:  $(CODELET_DEPS) $(GEN_TWIDDLE_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_TWIDDLE_C) $(GFLAGS) -n $* -name t1bv_$* -include "t1b.h" -sign 1) | $(ADD_DATE) | $(INDENT) >$@

#q1fv_%.c:  $(CODELET_DEPS) $(GEN_TWIDSQ_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_TWIDSQ_C) $(GFLAGS) -n $* -dif -name q1fv_$* -include "q1f.h") | $(ADD_DATE) | $(INDENT) >$@

#q1bv_%.c:  $(CODELET_DEPS) $(GEN_TWIDSQ_C)
#	($(PRELUDE_COMMANDS_DFT); $(GEN_TWIDSQ_C) $(GFLAGS) -n $* -dif -name q1bv_$* -include "q1b.h" -sign 1) | $(ADD_DATE) | $(INDENT) >$@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
