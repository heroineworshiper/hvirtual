/*
 * Copyright (c) 2003 Matteo Frigo
 * Copyright (c) 2003 Massachusetts Institute of Technology
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

/* This file was automatically generated --- DO NOT EDIT */
/* Generated on Sat Jul  5 21:50:57 EDT 2003 */

#include "config.h"



/* cheap-mode: VECTGRADE_FULL succeeded. (56 steps) */
/* Generated by: /homee/stevenj/cvs/fftw3.0.1/genfft-k7/gen_notw -no-randomized-cse -n 6 -name n1k7_6 */

/*
 * Generator Id's : 
 * $Id: algsimp.ml,v 1.3 2003/03/15 20:29:42 stevenj Exp $
 * $Id: fft.ml,v 1.3 2003/03/15 20:29:43 stevenj Exp $
 * $Id: gen_notw.ml,v 1.11 2003/04/18 01:21:45 athena Exp $
 */

/* The following asm code is Copyright (c) 2000-2001 Stefan Kral */
.section .rodata
	.balign 64
KP500000000KP500000000: .float +0.500000000000000000000000000000000000000000000, +0.500000000000000000000000000000000000000000000
KP866025403KN866025403: .float +0.866025403784438646763723170752936183471402627, -0.866025403784438646763723170752936183471402627
.text
.text
	.balign 64
n1k7_6:
	subl $28, %esp
	femms 
	movl %ebx, 24(%esp)
	movl 48(%esp), %edx
	movl 52(%esp), %ebx
	movl 32(%esp), %eax
	movl %esi, 20(%esp)
	movl 40(%esp), %ecx
	movl %edi, 16(%esp)
	sall $2, 60(%esp)
	movl %ebp, 12(%esp)
	sall $2, 64(%esp)
	leal (,%edx,4), %edx
	leal (,%ebx,4), %ebx
	.p2align 4,,7
.L0:
	/* promise simd cell size = 8 */ 
	leal (%edx,%edx,2), %esi
	movq (%eax), %mm1
	leal (%edx,%edx,4), %edi
	movq (%eax,%edx,2), %mm4
	movq (%eax,%edx), %mm6
	movq (%eax,%edx,4), %mm7
	movq (%eax,%esi), %mm0
	leal (%ebx,%ebx,2), %ebp
	movq (%eax,%edi), %mm3
	/* simd data load/store barrier */ 
	leal (%ebx,%ebx,4), %esi
	movq %mm1, %mm2
	addl 60(%esp), %eax
	movq %mm4, %mm5
	pfsub %mm0, %mm2
	pfadd %mm0, %mm1
	movq %mm7, %mm0
	pfadd %mm3, %mm4
	pfadd %mm6, %mm7
	pfsub %mm3, %mm5
	pfsub %mm6, %mm0
	movq %mm4, %mm3
	pfsub %mm7, %mm4
	pfadd %mm7, %mm3
	movq %mm5, %mm6
	movq %mm2, %mm7
	pfadd %mm0, %mm5
	pfsub %mm0, %mm6
	movq %mm4, 0(%esp)
	movq %mm1, %mm4
	movq %mm3, %mm0
	pfadd %mm5, %mm2
	pfmul KP500000000KP500000000, %mm5
	pfadd %mm3, %mm4
	pfmul KP500000000KP500000000, %mm0
	movq 0(%esp), %mm3
	pswapd %mm6, %mm6
	pfmul KP866025403KN866025403, %mm6
	movq %mm2, (%ecx,%ebp)
	movq %mm4, (%ecx)
	pswapd %mm3, %mm3
	pfsub %mm5, %mm7
	pfsub %mm0, %mm1
	pfmul KP866025403KN866025403, %mm3
	movq %mm7, %mm2
	pfadd %mm6, %mm7
	movq %mm1, %mm4
	pfsub %mm6, %mm2
	pfsub %mm3, %mm4
	movq %mm7, (%ecx,%ebx)
	pfadd %mm3, %mm1
	movq %mm2, (%ecx,%esi)
	movq %mm4, (%ecx,%ebx,2)
	movq %mm1, (%ecx,%ebx,4)
	addl 64(%esp), %ecx
	decl 56(%esp)
	jnz .L0
	femms 
	movl 24(%esp), %ebx
	movl 20(%esp), %esi
	movl 16(%esp), %edi
	movl 12(%esp), %ebp
	addl $28, %esp
	ret 

.section .rodata
nam:
	.string "n1k7_6"
	.align 4
desc:
	.long 6
	.long nam
	.double 18
	.double 4
	.double 0
	.double 0
	.long fftwf_kdft_k7_mgenus
	.long 0
	.long 0
	.long 0
	.long 0

.text
	.align 4
.globl fftwf_codelet_n1k7_6
fftwf_codelet_n1k7_6:
	subl $12,%esp
	addl $-4,%esp
	pushl $desc
	pushl $n1k7_6
	pushl 28(%esp)
	call fftwf_kdft_register
	addl $16,%esp
	addl $12,%esp
	ret

